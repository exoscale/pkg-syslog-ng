From 531d7ee03722e79d16ee544886c7b3df255a0149 Mon Sep 17 00:00:00 2001
From: Balazs Scheidler <balazs.scheidler@balabit.com>
Date: Fri, 25 Sep 2015 09:42:07 +0200
Subject: [PATCH 1/3] systemd-journal: clarify error/debug messages

This patch adds a few extra debug messages and clarifies existing ones in
order to make it easier to troubleshoot journal related errors and problems.

Signed-off-by: Balazs Scheidler <balazs.scheidler@balabit.com>
---
 modules/systemd-journal/journal-reader.c | 44 ++++++++++++++++++++------------
 1 file changed, 27 insertions(+), 17 deletions(-)

diff --git a/modules/systemd-journal/journal-reader.c b/modules/systemd-journal/journal-reader.c
index 2bc920ef756f..c7e66ab14b68 100644
--- a/modules/systemd-journal/journal-reader.c
+++ b/modules/systemd-journal/journal-reader.c
@@ -272,11 +272,16 @@ __seek_to_head(JournalReader *self)
   gint rc = journald_seek_head(self->journal);
   if (rc != 0)
     {
-      msg_error("Failed to seek to head of journal",
-          evt_tag_errno("error", errno),
-          NULL);
+      msg_error("Failed to seek to the start position of the journal",
+                evt_tag_errno("error", errno),
+                NULL);
       return FALSE;
     }
+  else
+    {
+      msg_debug("Seeking the journal to the start position",
+                NULL);
+    }
   return TRUE;
 }
 
@@ -288,12 +293,18 @@ __seek_to_saved_state(JournalReader *self)
   persist_state_unmap_entry(self->persist_state, self->persist_handle);
   if (rc != 0)
     {
-      msg_warning("Failed to seek to the cursor",
-          evt_tag_str("cursor", state->cursor),
-          evt_tag_errno("error", errno),
-          NULL);
+      msg_warning("Failed to seek journal to the saved cursor position",
+                  evt_tag_str("cursor", state->cursor),
+                  evt_tag_errno("error", errno),
+                  NULL);
       return __seek_to_head(self);
     }
+  else
+    {
+      msg_debug("Seeking the journal to the last cursor position",
+                evt_tag_str("cursor", state->cursor),
+                NULL);
+    }
   journald_next(self->journal);
   return TRUE;
 }
@@ -369,8 +380,8 @@ __fetch_log(JournalReader *self)
           if (rc < 0)
             {
               msg_error("Error occurred while getting next message from journal",
-                  evt_tag_errno("error", errno),
-                  NULL);
+                        evt_tag_errno("error", errno),
+                        NULL);
               result = NC_READ_ERROR;
             }
           break;
@@ -452,9 +463,9 @@ __add_poll_events(JournalReader *self)
   gint fd = journald_get_fd(self->journal);
   if (fd < 0)
     {
-      msg_error("Can't get fd from journal",
-          evt_tag_errno("error", errno),
-          NULL);
+      msg_error("Error setting up journal polling, journald_get_fd() returned failure",
+                evt_tag_errno("error", errno),
+                NULL);
       journald_close(self->journal);
       return FALSE;
     }
@@ -471,7 +482,7 @@ __init(LogPipe *s)
 
   if (journal_reader_initialized)
     {
-      msg_error("The configuration must not contain more than one systemd-journal source",
+      msg_error("The configuration must not contain more than one systemd-journal() source",
           NULL);
       return FALSE;
     }
@@ -482,15 +493,14 @@ __init(LogPipe *s)
   gint res = journald_open(self->journal, SD_JOURNAL_LOCAL_ONLY);
   if (res < 0)
     {
-      msg_error("Can't open journal",
-          evt_tag_errno("error", errno),
-          NULL);
+      msg_error("Error opening the journal",
+                evt_tag_errno("error", errno),
+                NULL);
       return FALSE;
     }
 
   if (!__set_starting_position(self))
     {
-      msg_error("Can't set starting position to the journal", NULL);
       journald_close(self->journal);
       return FALSE;
     }
-- 
2.11.0

